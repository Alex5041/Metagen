//import imported

fun main(){
a = 2
arr = [2,"a",1]
log(arr)
add(arr,2)
add(arr,1,2)
log(arr)
arr[0] = 1
log(arr)
log(remove(arr,"a"))
log(arr)
removeAt(arr,1)
log(arr)
log(has(arr,2))
a = [1]
b=[]
log(a==b)
log([0]==[0.0])
//whileFun()
//Root()
rew = -2
a[rew+2] = 3
c=Segment(a=2,v=2)
d = c
c.e = Segment()
log(c)
c.v = 2
log(d)
log(Segment())


/* d = Segment()
log(d)
//add()
d.e = 4
log(d is Segment)
log(Segment) */

/*
log(d)
log(if(-1) 1 else 0)
a = [5,2]
a[0] = "fads"
//add(a, 0, d)
log(a)
remove()
whileFun()*/

/*
log(A())
fwe = A()
fwe.e = 3
log(fwe)
log(A)
log(A())
log(B)*/
}

class A:B {}

class B {}

fun whileFun() {
    a = 1
    while(a<5) {
      if(a%2==0){
            log(a)
            } else{
            log(a+1)
            }
        a = a + 1
        }
    log(a)
}

class Colors {
    BLACK = "000000"
    WHITE = "FFFFFF"
    GRAY = "929292"
    RED = "BF3011"
    ORANGE = "DF8022"
    YELLOW = "E5B527"
    MINT = "26D07E"
    GREEN = "06694A"
    BLUE = "3896D4"
    INDIGO = "253092"
    PURPLE = "820D7C"
    CHERRY = "FD5FF0"
    CHERRY = "69122D"
}

class Root {
segm = Segment()
iter = 0
}

class Segment {
c = a + b + a
iter = 1
a = 5
b = a
}

fun toDegrees(rad) {
return
a=b.c.d.e.f.g.h.parent.(if(a==true) u else b).t
}


class Math {
    RANDOM_SEED = 42
    PI = 3.1415926
}

fun rotate(point, pivot, angle) {
break}

fun abs(x) {
    return if (x < 0) -x else x
}

fun toRadians(deg) {
    return abs( \
    -deg) * 3 / 180
}

// returns random int in range [a,b]
fun rndInt(a,b)  {
    t = int(rnd() * ((b-a)+1))
    log("t:"+t)
    log(t)
    return a + t
}

// get all classes of classRef type
fun all(classRef) {
    res = []
    stack = [Root]
    while(stack.size > 0) {
      //  current = stack.pop()
        if(current is classRef) {
            res.add(current)
        } else {
        }
        }
        stack.add(res.properties isnot Value)
    }
}//
